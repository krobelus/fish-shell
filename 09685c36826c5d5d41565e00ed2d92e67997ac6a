None:None: 𑁍 84785907
 09685c368 Make `apt` completions useable once again
 ? no file 'None' in 09685c36826c5d5d41565e00ed2d92e67997ac6a~..09685c36826c5d5d41565e00ed2d92e67997ac6a
	[faho] This should reintroduce #8575 because it uses tr again, and that might be broken with non-ASCII characters.

		Additionally I'd like to know why it's so slow for you - on my system looking for `.*ac.*` with the old string path takes ~380ms and returns 3000 results.

		This takes ~260ms, but only shows 111 results, some of them broken:

		```
		musepack-tools	MusePack commandline utilities
		dh-acc	debhelper addon to compare ABI compatibility of shared C/C

		 library versions
		abi-tracker	visualize ABI changes of a C/C

		 library
		```

		instead of

		```
		musepack-tools	MusePack commandline utilities
		dh-acc	debhelper addon to compare ABI compatibility of shared C/C++ library versions
		abi-tracker	visualize ABI changes of a C/C++ library
		liblapack3	Library of linear algebra routines 3 - shared version
		```

		We are dealing with multiline output here that we awkardly smush together, we *can't* limit the output beforehand like that.
	[faho] Ah, it's the `tr \x1a+`, which I'm assuming is a typo?

		Regardless, we absolutely cannot use `tr` here.

		And it turns out that's actually not necessary anyway, because

		```fish
		set -l old (apt-cache --no-generate show '.*ac.*' 2>/dev/null | head -n2500 | sed -r '/^(Packa
		ge|Description-?[a-zA-Z_]*):/!d;s/Package: (.*)/\1\t/g;s/Description-?[^:]*: (.*)/\1\x1a\n/g' | string join "" | string
		replace --all --regex \x1a+ \n | uniq)
		```

		(i.e. introducing the limiting `head` to the old string way)

		Takes basically the same time as doing it with `tr`. So that wasn't actually the cause of the performance improvement.

		In general, we are bounded by how long the `apt-cache` takes - we can't be faster than that. On my system, without the `head` it takes  ~370ms, so that's the minimum amount of time we need. With the `head` it takes ~280ms as that exerts some backpressure - once all the lines have been read the apt-cache will most likely die due to SIGPIPE.

		We appear to be introducing no real additional delay, so the place you need to look to improve the time is `apt-cache`. Find some other command to do what it does, find some way to make it faster (e.g. by changing some config options).

		Here, `apt-cache --no-generate show '.*' 2>/dev/null >/dev/null` takes ~2.1s and prints a little over 1.6 million lines of output.
	[faho] Okay, 2500 lines is on the short side here, unfortunately.

		The descriptions can absolutely be really long - youtube-dl has 1200 lines, texlive-latex-extra has 2700 (in Debian 11).

		That means trying to `apt install texlive` lists 10 packages out of 54. That means the `head` will have to be done after the `sed` (which removes everything but the first line of the description).

		In my tests that loses some of the speedup, but not a ton - 10%.

		I'm just gonna commit that - revert this and add a `| head -n 2500` *after* the `sed`.

		Edit: b88b2577267c6837886c93c6c8237528fb415ad6

𑁍
